input {
  file {
    path => "/root/uip/nfcapd.201604130705.csv-1.csv"
    type => "NF"  # a type to identify those logs (will need this later)
    start_position => "beginning"
    sincedb_path => "/root/bimallik/since2.db"
  }
}
filter {
    csv {
        columns => ["ts","te","td","sa","da","sp","dp","pr","flg","fwd","stos","ipkt","ibyt",
                    "opkt","obyt","in","out","sas","das","smk","dmk","dtos",
                    "dir","nh","nhb","svln","dvln","ismc","odmc","idmc",
                    "osmc","mpls1","mpls2","mpls3","mpls4","mpls5","mpls6",
                    "mpls7","mpls8","mpls9","mpls10","cl","sl","al","ra","eng","exid","tr"]
        separator => ","
        remove_field => ["td","sp","dp","pr","flg","fwd","stos","ipkt",
                    "opkt","in","out","sas","das","smk","dmk","dtos",
                    "dir","nh","nhb","svln","dvln","ismc","odmc","idmc",
                    "osmc","mpls1","mpls2","mpls3","mpls4","mpls5","mpls6",
                    "mpls7","mpls8","mpls9","mpls10","cl","sl","al","ra","eng","exid","tr"]
    }
    ruby {
          code => "require 'net/http'
                   index_name = 'ad-2016.06.07'
                   type = 'AD'
                   srcIP = '10.140.20.142'
                   string1 = 'http://localhost:9200'
                   string2 = '/'+ index_name + '/' + type + '/' + '_search?q=Source_Network_Address:' + srcIP
                   url = string1 + string2
                   resp = Net::HTTP.get_response(URI.parse(url))
                   event['te'] = resp.body"
         # add_field => { "userid" => "%{resp_text}" }
         }

}
output {
  #elasticsearch{
  #  hosts => "localhost"
  #  index => "netflow-%{+YYYY.MM.dd}"
  #     }
  # stdout { codec => rubydebug }
}
